define(["./ArcType-f8a754c5","./buildModuleUrl-8cce5713","./Cartesian4-b0ddc4ba","./Check-7b2a090c","./FeatureDetection-ab6f364c","./CoplanarPolygonGeometryLibrary-e0f93d68","./when-b60132fc","./GeometryAttribute-923c2729","./GeometryAttributes-252e9929","./PolygonGeometryLibrary-34d6c185","./GeometryPipeline-54076c24","./IndexDatatype-3565e02d","./Math-31e539c2","./WebGLConstants-aba9fc67","./OrientedBoundingBox-a6c2fb0f","./PolygonPipeline-f2f37e26","./Plane-5716a082","./earcut-2.2.1-20c8012f","./EllipsoidRhumbLine-3ee4574a","./AttributeCompression-399750a1","./EncodedCartesian3-ac3717ed"],(function(e,t,r,n,o,i,a,y,c,l,u,p,s,d,m,f,g,h,b,P,G){"use strict";function v(e){for(var r=e.length,n=new Float64Array(3*r),i=p.IndexDatatype.createTypedArray(r,2*r),a=0,l=0,u=0;u<r;u++){var s=e[u];n[a++]=s.x,n[a++]=s.y,n[a++]=s.z,i[l++]=u,i[l++]=(u+1)%r}var d=new c.GeometryAttributes({position:new y.GeometryAttribute({componentDatatype:o.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:n})});return new y.Geometry({attributes:d,indices:i,primitiveType:t.PrimitiveType.LINES})}function L(e){var t=(e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT)).polygonHierarchy;this._polygonHierarchy=t,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=l.PolygonGeometryLibrary.computeHierarchyPackedLength(t)+1}L.fromPositions=function(e){return new L({polygonHierarchy:{positions:(e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT)).positions}})},L.pack=function(e,t,r){return r=a.defaultValue(r,0),t[r=l.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,r)]=e.packedLength,t};var C={polygonHierarchy:{}};return L.unpack=function(e,t,r){t=a.defaultValue(t,0);var n=l.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t);t=n.startingIndex,delete n.startingIndex;var o=e[t];return a.defined(r)||(r=new L(C)),r._polygonHierarchy=n,r.packedLength=o,r},L.createGeometry=function(n){var o=n._polygonHierarchy,a=o.positions;if(!((a=e.arrayRemoveDuplicates(a,r.Cartesian3.equalsEpsilon,!0)).length<3)&&i.CoplanarPolygonGeometryLibrary.validOutline(a)){var c=l.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(o,!1);if(0!==c.length){for(var p=[],s=0;s<c.length;s++){var d=new l.GeometryInstance({geometry:v(c[s])});p.push(d)}var m=u.GeometryPipeline.combineInstances(p)[0],f=t.BoundingSphere.fromPoints(o.positions);return new y.Geometry({attributes:m.attributes,indices:m.indices,primitiveType:m.primitiveType,boundingSphere:f})}}},function(e,r){return a.defined(r)&&(e=L.unpack(e,r)),e._ellipsoid=t.Ellipsoid.clone(e._ellipsoid),L.createGeometry(e)}}));
